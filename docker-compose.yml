version: '3.4'

networks:
  backend-common:

  backend-discussion:

  userdemo:



services:
  userdb:
    container_name: user-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SuperStrong!
    networks:
      - userdemo
    ports:
      - "18001:1433"

  userwebapi:
    container_name: user-api
    image: ${DOCKER_REGISTRY-}userwebapi
    build:
      context: .
      dockerfile: UserWebApi/Dockerfile
    environment:
      - DB_HOST=userdb
      - DB_NAME=user
      - DB_SA_PASSWORD=SuperStrong!
    networks:
      - backend-common
      - userdemo

  discussionservice:
    container_name: discussion-service
    image: ${DOCKER_REGISTRY-}discussionservice
    build:
      context: .
      dockerfile: DiscussionService/Dockerfile
    environment:
      - DB_HOST=discussion-db
      - DB_NAME=rf-discussion
      - DB_SA_PASSWORD=SuperStrong!
    networks:
      - backend-common
      - backend-discussion
  
  discussion-db:
    container_name: discussion-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SuperStrong!
    networks:
      - backend-discussion
    ports:
      - "39001:1433"



  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    networks:
      - backend-common
    ports:
      - "8001:8081"
      - "8002:8080"
  
  rankingforum-mq:
    image: rabbitmq:3-management
    container_name: RankingForum.RabbitMQ
    hostname: rankingforum-mq
    volumes:
      - ././containers/queue/data/:/var/lib/rabbitmq
      - ././containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend-common

