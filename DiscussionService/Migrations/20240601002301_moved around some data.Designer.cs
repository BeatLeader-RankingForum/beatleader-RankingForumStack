// <auto-generated />
using System;
using DiscussionService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscussionService.Migrations
{
    [DbContext(typeof(DiscussionDbContext))]
    [Migration("20240601002301_moved around some data")]
    partial class movedaroundsomedata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscussionService.Models.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Characteristic")
                        .HasColumnType("int");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int>("MapDiscussionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapDiscussionId", "Characteristic", "Difficulty")
                        .IsUnique();

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("DiscussionService.Models.MapDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscussionOwnerIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapsetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapsetId")
                        .IsUnique();

                    b.ToTable("MapDiscussions");
                });

            modelBuilder.Entity("DiscussionService.Models.Discussion", b =>
                {
                    b.HasOne("DiscussionService.Models.MapDiscussion", null)
                        .WithMany("Discussions")
                        .HasForeignKey("MapDiscussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiscussionService.Models.MapDiscussion", b =>
                {
                    b.Navigation("Discussions");
                });
#pragma warning restore 612, 618
        }
    }
}
