name: CI/CD Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore UserService dependencies
        run: dotnet restore UserServiceUnitTest/UserServiceUnitTest.csproj

      - name: Run UserService unit tests
        run: dotnet test UserServiceUnitTest/UserServiceUnitTest.csproj

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Determine if ApiGateway has changed
        id: ApiGateway-changed
        run: |
          if git diff --quiet HEAD~1 HEAD -- ./ApiGateway/; then 
            echo "::set-output name=changed::false"
          else 
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker image for ApiGateway
        if: ${{ steps.ApiGateway-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ApiGateway/Dockerfile
          push: true
          tags: lightai39/rf-apigateway:latest

      - name: Determine if DiscussionService has changed
        id: DiscussionService-changed
        run: |
          if git diff --quiet HEAD~1 HEAD -- ./DiscussionService/; then 
            echo "::set-output name=changed::false"
          else 
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker image for DiscussionService
        if: ${{ steps.DiscussionService-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DiscussionService/Dockerfile
          push: true
          tags: lightai39/rf-discussionservice:latest

      - name: Determine if UserService has changed
        id: UserService-changed
        run: |
          if git diff --quiet HEAD~1 HEAD -- ./UserService/; then 
            echo "::set-output name=changed::false"
          else 
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker image for UserService
        if: ${{ steps.UserService-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./UserService/Dockerfile
          push: true
          tags: lightai39/rf-userservice:latest

      - name: Determine if CommentService has changed
        id: CommentService-changed
        run: |
          if git diff --quiet HEAD~1 HEAD -- ./CommentService/; then 
            echo "::set-output name=changed::false"
          else 
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker image for CommentService
        if: ${{ steps.CommentService-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./CommentService/Dockerfile
          push: true
          tags: lightai39/rf-commentservice:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3

      - name: Load Kube Config
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG_DATA" | base64 --decode > $HOME/.kube/config

      - name: Apply Kubernetes files
        run: |
          for file in k8s/**/*.yaml; do
            kubectl apply -f "$file"
          done

      - name: Force Restart Deployments
        run: |
          kubectl rollout restart deployment -n default

      - name: Verify deployment
        run: kubectl get deployments -n default
