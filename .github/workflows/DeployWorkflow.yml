name: CI/CD Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore UserService dependencies
      run: dotnet restore UserServiceUnitTest/UserServiceUnitTest.csproj

    - name: Run UserService unit tests
      run: dotnet test UserServiceUnitTest/UserServiceUnitTest.csproj

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image for ApiGateway
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./ApiGateway/Dockerfile
        push: true
        tags: lightai39/rf-apigateway:latest

    - name: Build and push Docker image for DiscussionService
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./DiscussionService/Dockerfile
        push: true
        tags: lightai39/rf-discussionservice:latest

    - name: Build and push Docker image for UserService
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./UserService/Dockerfile
        push: true
        tags: lightai39/rf-userservice:latest

    - name: Build and push Docker image for CommentService
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./CommentService/Dockerfile
        push: true
        tags: lightai39/rf-commentservice:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3

    - name: Load Kube Config
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBE_CONFIG_DATA" | base64 --decode > $HOME/.kube/config

    - name: Apply Kubernetes files
      run: |
        for file in k8s/**/*.yaml; do
          kubectl apply -f "$file"
        done

    - name: Force Restart Deployments
      run: |
        kubectl rollout restart deployment -n default

    - name: Verify deployment
      run: kubectl get deployments -n default
